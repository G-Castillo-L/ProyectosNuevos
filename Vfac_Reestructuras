CREATE OR REPLACE TABLE crp-pro-cx-analitica.mus_pro_negfin_tablas_finales.FAC_NEGFIN_REEST_VPBIM1
AS 

SELECT A.TIP_INF,
      ANIO_OBS,
      MES_OBS,
      ANIOMES_OBS,
      ANIO_ESTR,
      MES_ESTR,
      ANIOMES_ESTR,
      ANTIG_ESTR,
      FLG_30,
      FLG_90,
      CASE WHEN A.CTA_NIV_MOR>=3 THEN "30+" 
      ELSE "REST" END AS FLG_NIV_MOR,

    A.RANG_NIV_MOR,

    D.ID AS ID_RANG_LIM_CRED,

    A.CCR_CVE_BLQ_DOS,
    CASE WHEN A.CCR_CVE_BLQ_DOS IN ("M","R") THEN A.CCR_CVE_BLQ_DOS
    ELSE "" END as BLOQUEO,
    CASE 
        WHEN A.FLG_DIG = 0 THEN 2 
        ELSE 1 
    END FLG_DIG,
    CASE 
        WHEN A.ANTIG_ESTR = 0 THEN 1 
        ELSE 0 
    END AS FLG_INSCRITA,
    CASE 
        WHEN A.MOBS_ALT_ESTR BETWEEN 0 AND 6 THEN 1
        WHEN A.MOBS_ALT_ESTR BETWEEN 7 AND 12 THEN 2
        WHEN A.MOBS_ALT_ESTR BETWEEN 13 AND 24 THEN 3
        WHEN A.MOBS_ALT_ESTR BETWEEN 25 AND 36 THEN 4
        WHEN A.MOBS_ALT_ESTR BETWEEN 37 AND 48 THEN 5
        WHEN A.MOBS_ALT_ESTR BETWEEN 49 AND 60 THEN 6
        WHEN A.MOBS_ALT_ESTR >= 61 THEN 7
        ELSE 8
    END AS ID_RANG_MOB_PLAN,
    CASE 
        WHEN C.ID_SEGMENTO_CLIENTE IS NULL THEN 30
        ELSE C.ID_SEGMENTO_CLIENTE 
    END AS ID_SEGMENTO_CLIENTE,

    CASE 
        WHEN A.CTA_EDO_CVE NOT IN ('T', '9', '8', 'P', 'Z', 'Q') THEN 1 
        ELSE 0 
    END AS FLG_ACT,
  
    CASE 
        WHEN B.SEGMENTO_OFICIAL = 99 THEN 13
        WHEN B.SEGMENTO_OFICIAL IS NULL THEN 13
        ELSE B.SEGMENTO_OFICIAL
    END AS SEGMENTO_OFICIAL,

    CASE 
        WHEN F.RFM_CREDITO IS NULL THEN 9
        WHEN F.RFM_CREDITO ="0.inactivo <=12m" THEN 0
        WHEN F.RFM_CREDITO ="1. Premium" THEN 1
        WHEN F.RFM_CREDITO ="2. Valiosos" THEN 2
        WHEN F.RFM_CREDITO ="3. Regular" THEN 3
        WHEN F.RFM_CREDITO ="4. Por abandonar" THEN 4
        WHEN F.RFM_CREDITO ="5. Nuevos" THEN 5
        WHEN F.RFM_CREDITO ="6.Dormant 6m" THEN 6
        WHEN F.RFM_CREDITO ="7.Dormant 12m" THEN 7
        WHEN F.RFM_CREDITO ="8.Dormant 18m" THEN 8
        ELSE 9 
    END AS ID_RFM_CREDITO,

    CASE WHEN A.PLAZO<=3 THEN "01-03"
          WHEN A.PLAZO<=6 THEN "04-06"
          WHEN A.PLAZO<=9 THEN "07-09"
          WHEN A.PLAZO<=12 THEN "10-12"
          WHEN A.PLAZO<=15 THEN "13-15"
          WHEN A.PLAZO<=18 THEN "16-18"
          WHEN A.PLAZO<=21 THEN "19-21"
          WHEN A.PLAZO<=24 THEN "22-24"
          WHEN A.PLAZO<=33 THEN "25-33"
          WHEN A.PLAZO<=36 THEN "34-36"
          ELSE "36+" END AS RANG_PLAZO,
          
    
    CASE 
          WHEN A.RANG_NIV_MOR= "0.-CTAS_VIG" THEN " CORRIENTE"
          WHEN A.RANG_NIV_MOR= "1.-1-29 DIAS" THEN "2(1-29 D)"
          WHEN A.RANG_NIV_MOR= "2.-30_DIAS" THEN "3(30-59 D)"
          WHEN A.RANG_NIV_MOR= "3.-60_DIAS" THEN "4(60-89 D)"
          WHEN A.RANG_NIV_MOR= "4.-90_DIAS" THEN "5(90-119 D)"
          WHEN A.RANG_NIV_MOR= "5.-120_DIAS" THEN "6(120-149 D)"
          WHEN A.RANG_NIV_MOR= "6.-150_DIAS" THEN "7(150-179 D)"
          WHEN A.RANG_NIV_MOR= "7.-180_DIAS" THEN "8(180-209 D)"
          WHEN A.RANG_NIV_MOR= "8.-210_DIAS" THEN "9(+210 D)"
          ELSE"" END AS CD_MOROSIDAD,
  
     CASE WHEN A.RANG_MOBS="A.0M-6M" THEN 1
          WHEN A.RANG_MOBS="B.7M-12M" THEN 2
          WHEN A.RANG_MOBS="C.13M-24M" THEN 3
          WHEN A.RANG_MOBS="D.25M-36M" THEN 4
          WHEN A.RANG_MOBS="E.37M-48M" THEN 5
          WHEN A.RANG_MOBS = "F.49M-48M" THEN 6
          WHEN A.RANG_MOBS = "G.37M-48M" THEN 7
  --       WHEN A.MOBS_ALT_ESTR >= 61 THEN 7
  --       ELSE 8
          ELSE 8 END ID_RANG_MOBS,

          CASE WHEN EDAD <=30 THEN 1
        WHEN EDAD <=35 THEN 2
        WHEN EDAD <=45 THEN 3 
        WHEN EDAD <=50 THEN 4
        WHEN EDAD >50 THEN 5 ELSE 0
        END ID_RANG_EDAD,
--DATE_DIFF(DATE(ANIO_OBS,MES_OBS,1),CTE_FCH_NAC, YEAR) EDAD,

        CASE 
        WHEN CVE_ZNA ="1" THEN 1.1
        WHEN CVE_ZNA ="2" THEN 2.1
        WHEN CVE_ZNA ="3" THEN 3.1
        WHEN CVE_ZNA ="4" THEN 4.1
        WHEN CVE_ZNA ="5" THEN 5.1
        WHEN CVE_ZNA ="6" THEN 6.1
        WHEN CVE_ZNA ="7" THEN 7.1
        WHEN CVE_ZNA ="8" THEN 8.1
        WHEN CVE_ZNA ="9" THEN 9.1
        WHEN CVE_ZNA ="OTRO" THEN 11.1
        WHEN CVE_ZNA ="VAD" THEN 10.1
      --   WHEN CVE_ZNA ="Metro Sur" THEN 1.1
      --   WHEN CVE_ZNA ="Metro Oriente" THEN 2.1
      --   WHEN CVE_ZNA ="Metro Norte" THEN 3.1
      --   WHEN CVE_ZNA ="Metro Centro" THEN 4.1
      --   WHEN CVE_ZNA ="Bajío" THEN 5.1
      --   WHEN CVE_ZNA ="Occidente" THEN 6.1
      --   WHEN CVE_ZNA ="Pacífico" THEN 7.1
      --   WHEN CVE_ZNA ="Centro Norte" THEN 8.1
      --   WHEN CVE_ZNA ="Norte" THEN 9.1
      --   WHEN CVE_ZNA ="Centro Sur" THEN 10.1
      -- 	WHEN CVE_ZNA ="Golfo" THEN 11.1
      --   WHEN CVE_ZNA ="Sur" THEN 12.1
      --   WHEN CVE_ZNA ="VAD" THEN 14.1
      --   WHEN CVE_ZNA ="Omnicanal" THEN 14.1
      -- ELSE 13.1
        END CVE_ZNA,

    CTE_GEN,
   CASE 
      WHEN A.CTA_NIV_MOR <5 THEN "0-89 Días"
      ELSE "90+" END NIV_MOR_90,
      PLAZO  AS ID_PLAZO,
      NIV_RIESGO AS RIESGO,
      
      NUM_REEST,
      TASA,
      "0" PLAN,

CAST(COUNT(A.CTA_ACT) AS FLOAT64) AS CUENTAS,
    CAST(SUM(A.CTA_SDO_ACT) / 1000000 AS FLOAT64) AS CTA_SDO_ACT,
    CAST(SUM(A.PLAN_SDO_ACT) / 1000000 AS FLOAT64) AS SDO_PLAN,
    CAST(SUM(A.IMP_CAST) / 1000000 AS FLOAT64) AS IMP_CAST,
    CAST(SUM(CASE WHEN A.IMP_CAST > 0 THEN 1 ELSE 0 END) / 1000 AS FLOAT64) AS CUENTAS_CAST,
    CAST(SUM(A.CANT_CAST) / 1000 AS FLOAT64) AS CANT_CAST,
    SUM(CASE WHEN A.ANTIG_ESTR=3 THEN CTA_SDO_ACT/ 1000000 ELSE 0 END) AS SDO_TOT_3M,
    SUM(CASE WHEN A.ANTIG_ESTR=6 THEN CTA_SDO_ACT/ 1000000 ELSE 0 END) AS SDO_TOT_6M,
    SUM(CASE WHEN A.ANTIG_ESTR=12 THEN CTA_SDO_ACT/ 1000000 ELSE 0 END) AS SDO_TOT_12M,
    SUM(CASE WHEN A.ANTIG_ESTR=18 THEN CTA_SDO_ACT/ 1000000 ELSE 0 END) AS SDO_TOT_18M,
    SUM(CASE WHEN A.ANTIG_ESTR=24 THEN CTA_SDO_ACT/ 1000000 ELSE 0 END) AS SDO_TOT_24M,
    SUM(CASE WHEN CTA_NIV_MOR >= 3 THEN CTA_SDO_ACT/ 1000000 ELSE 0 END) AS SDO_30,
    SUM(CASE WHEN CTA_NIV_MOR >= 4 THEN CTA_SDO_ACT/ 1000000 ELSE 0 END) AS SDO_60,
    SUM(CASE WHEN A.ANTIG_ESTR=3 AND CTA_NIV_MOR >= 3 THEN CTA_SDO_ACT/ 1000000 ELSE 0 END) AS SDO_30_3M,
    SUM(CASE WHEN A.ANTIG_ESTR=6 AND CTA_NIV_MOR >= 3 THEN CTA_SDO_ACT/ 1000000 ELSE 0 END) AS SDO_30_6M,
    SUM(CASE WHEN A.ANTIG_ESTR=9 AND CTA_NIV_MOR >= 3 THEN CTA_SDO_ACT/ 1000000 ELSE 0 END) AS SDO_30_9M,
    SUM(CASE WHEN A.ANTIG_ESTR=12 AND CTA_NIV_MOR >= 3 THEN CTA_SDO_ACT/ 1000000 ELSE 0 END) AS SDO_30_12M,

    SUM(CASE WHEN A.ANTIG_ESTR=9 THEN CTA_SDO_ACT/ 1000000 ELSE 0 END) AS SDO_TOT_9M,
    SUM(CASE WHEN CTA_NIV_MOR >= 5 THEN CTA_SDO_ACT/ 1000000 ELSE 0 END) AS SDO_90,
    SUM(CASE WHEN A.ANTIG_ESTR=6 AND CTA_NIV_MOR >= 5 THEN CTA_SDO_ACT/ 1000000 ELSE 0 END) AS SDO_90_6M,
    SUM(CASE WHEN A.ANTIG_ESTR=9 AND CTA_NIV_MOR >= 5 THEN CTA_SDO_ACT/ 1000000 ELSE 0 END) AS SDO_90_9M,
    SUM(CASE WHEN A.ANTIG_ESTR=12 AND CTA_NIV_MOR >= 5 THEN CTA_SDO_ACT/ 1000000 ELSE 0 END) AS SDO_90_12M,
    SUM(CASE WHEN A.ANTIG_ESTR=18 AND CTA_NIV_MOR >= 5 THEN CTA_SDO_ACT/ 1000000 ELSE 0 END) AS SDO_90_18M,


    SUM(CASE WHEN A.ANTIG_ESTR=3 THEN PLAN_SDO_ACT/ 1000000 ELSE 0 END) AS SDOP_TOT_3M,
    SUM(CASE WHEN A.ANTIG_ESTR=6 THEN PLAN_SDO_ACT/ 1000000 ELSE 0 END) AS SDOP_TOT_6M,
    SUM(CASE WHEN A.ANTIG_ESTR=12 THEN PLAN_SDO_ACT/ 1000000 ELSE 0 END) AS SDOP_TOT_12M,
    SUM(CASE WHEN A.ANTIG_ESTR=18 THEN PLAN_SDO_ACT/ 1000000 ELSE 0 END) AS SDOP_TOT_18M,
    SUM(CASE WHEN A.ANTIG_ESTR=24 THEN PLAN_SDO_ACT/ 1000000 ELSE 0 END) AS SDOP_TOT_24M,
    SUM(CASE WHEN CTA_NIV_MOR >= 3 THEN PLAN_SDO_ACT/ 1000000 ELSE 0 END) AS SDOP_30,
    SUM(CASE WHEN CTA_NIV_MOR >= 4 THEN PLAN_SDO_ACT/ 1000000 ELSE 0 END) AS SDOP_60,
    
    SUM(CASE WHEN A.ANTIG_ESTR=3 AND CTA_NIV_MOR >= 3 THEN PLAN_SDO_ACT/ 1000000 ELSE 0 END) AS SDOP_30_3M,
    SUM(CASE WHEN A.ANTIG_ESTR=6 AND CTA_NIV_MOR >= 3 THEN PLAN_SDO_ACT/ 1000000 ELSE 0 END) AS SDOP_30_6M,
    SUM(CASE WHEN A.ANTIG_ESTR=9 AND CTA_NIV_MOR >= 3 THEN PLAN_SDO_ACT/ 1000000 ELSE 0 END) AS SDOP_30_9M,
    SUM(CASE WHEN A.ANTIG_ESTR=12 AND CTA_NIV_MOR >= 3 THEN PLAN_SDO_ACT/ 1000000 ELSE 0 END) AS SDOP_30_12M,

    SUM(CASE WHEN A.ANTIG_ESTR=9 THEN PLAN_SDO_ACT/ 1000000 ELSE 0 END) AS SDOP_TOT_9M,
    SUM(CASE WHEN CTA_NIV_MOR >= 5 THEN PLAN_SDO_ACT/ 1000000 ELSE 0 END) AS SDOP_90,
    SUM(CASE WHEN A.ANTIG_ESTR=6 AND CTA_NIV_MOR >= 5 THEN PLAN_SDO_ACT/ 1000000 ELSE 0 END) AS SDOP_90_6M,
    SUM(CASE WHEN A.ANTIG_ESTR=9 AND CTA_NIV_MOR >= 5 THEN PLAN_SDO_ACT/ 1000000 ELSE 0 END) AS SDOP_90_9M,
    SUM(CASE WHEN A.ANTIG_ESTR=12 AND CTA_NIV_MOR >= 5 THEN PLAN_SDO_ACT/ 1000000 ELSE 0 END) AS SDOP_90_12M,
    SUM(CASE WHEN A.ANTIG_ESTR=18 AND CTA_NIV_MOR >= 5 THEN PLAN_SDO_ACT/ 1000000 ELSE 0 END) AS SDOP_90_18M,


FROM  `crp-pro-dwh-semanticagold.MUS_PRO_DWH_VIEWS_ODS.VFAC_NEGFIN_TM_REESTRUCTURA` AS A
LEFT JOIN (SELECT 
CTA_CVE,SEGMENTO_OFICIAL,MAX(FEC_MACROSEG) FEC_MACROSEG
,FCH_CARGA, tip_inf
FROM `crp-pro-dwh-semanticagold.MUS_PRO_DWH_VIEWS_ODS.VFAC_NEGFIN_MACROSEGMENTO`

GROUP BY 1,2,4,5 )AS B
    ON B.CTA_CVE = A.CTA_CVE
    AND EXTRACT(year from B.FEC_MACROSEG) = A.ANIO_ESTR
    AND EXTRACT(MONTH FROM B.FEC_MACROSEG) = A.MES_ESTR
    AND B.TIP_INF = A.TIP_INF
LEFT JOIN (SELECT ID AS ID_SEGMENTO_CLIENTE 
,SEGMENTO_CLIENTE,MAX(FCH_CARGA) AS FCH_CARGA
FROM `crp-pro-cx-semantica.mus_pro_negfin_shared_views.VDIM_NEGFIN_RB_SEGMENTO_CLIENTE`--`crp-pro-dwh-semanticagold.MUS_PRO_DWH_VIEWS_ODS.VDIM_NEGFIN_RB_SEGMENTO_CLIENTE`
GROUP BY ID,SEGMENTO_CLIENTE
) C ON UPPER(A.SEGMENTO_CLIENTE) = UPPER (C.SEGMENTO_CLIENTE)
LEFT JOIN (select * from `crp-pro-cx-semantica.mus_pro_negfin_shared_views.VDIM_NEGFIN_RB_RANG_LIM_CRD`) D
ON A.RANG_LIM_CRD=D.RANG_LIM_CRD
LEFT JOIN crp-pro-cx-semantica.mus_pro_shared_views.VDIM_SGMTOS_RFM_HIST_AANF AS F  
    ON A.CTA_CVE = F.CTA_CVE 
    AND A.ANIO_ESTR = F.ANIO 
    AND A.MES_ESTR = F.MES

WHERE ANIOMES_OBS>=202201 
GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33

    ;

    --);

-- CREATE or REPLACE VIEW crp-pro-cx-semantica.mus_pro_negfin_shared_views.VFAC_NEGFIN_REEST_VPBIM1
-- AS
-- SELECT *
-- FROM crp-pro-cx-analitica.mus_pro_negfin_tablas_finales.FAC_NEGFIN_REEST_VPBIM1
